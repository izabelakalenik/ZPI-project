name: CI
on:
  pull_request:
    branches:
      - main

jobs:
  flutter_test:
    name: Run flutter test and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "17.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test

  build_ios:
    name: Build Flutter (iOS)
    needs: [flutter_test]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter clean
      - run: flutter build ios --no-codesign

  build_apk:

    # The machine, we can also use windows-latest or ubuntu-latest
    # We are choosing macos-latest because we will be also building for iOS
    runs-on: ubuntu-latest

    steps:

      # Clones the project on the machine
      - uses: actions/checkout@v4

      # Sets up java 11
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      # Installs flutter and related dependency on this machine
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          # flutter-version: '3.16.8'
          # ^ If you want to use a specific version of flutter

      # Fetches proj dependencies from pub
      - name: Install dependencies
        run: flutter pub get
        # ^ If you want to use a specific version of flutter
#
#      # Verifies if the dart code is formatted well
#      - name: Verify formatting
#        run: dart format --output=none --set-exit-if-changed .
#        # --set-exit-if-changed stops execution if the any code is not well formatted
#        # --output=none prints files which needs to be formatted
#
#      # Checks for Symantic errors. Can be configured using analysis_options.yaml
#      - name: Analyze project source
#        run: flutter analyze --fatal-warnings
#        # optionally use --fatal-warnings to stop execution if any warnings are found
#
#      # Runs unit test
#      - name: Run tests
#        run: flutter test

      # Create android apk
      - name: Build apk
        run: flutter build apk

# error:
#  Running Gradle task 'bundleRelease'...
#
#FAILURE: Build failed with an exception.
#
#  * Where:
#Build file '/home/runner/work/ZPI-project/ZPI-project/android/app/build.gradle' line: 2
#
#  * What went wrong:
#An exception occurred applying plugin request [id: 'com.android.application']
#  > Failed to apply plugin 'com.android.internal.application'.
#  > Android Gradle plugin requires Java 17 to run. You are currently using Java 12.
#     Your current JDK is located in /opt/hostedtoolcache/jdk/12.0.2/x64
#     You can try some of the following options:
#      - changing the IDE settings.
#      - changing the JAVA_HOME environment variable.
#      - changing `org.gradle.java.home` in `gradle.properties`.
#
#  * Try:
#  > Run with --stacktrace option to get the stack trace.
#  > Run with --info or --debug option to get more log output.
#  > Run with --scan to get full insights.
#  > Get more help at https://help.gradle.org.
#
#  BUILD FAILED in 1m 41s
#  Running Gradle task 'bundleRelease'...                            102.5s
#  Gradle task bundleRelease failed with exit code 1

#  build_appbundle:
#    name: Build Flutter (Android)
#    needs: [ flutter_test ]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v1
#        with:
#          java-version: "12.x"
#      - uses: subosito/flutter-action@v1
#        with:
#          channel: "stable"
#      - run: flutter pub get
#      - run: flutter clean
#      - run: flutter build appbundle


